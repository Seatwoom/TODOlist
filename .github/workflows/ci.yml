name: CI

on:
  pull_request:
    branches: [main, master]
  push:
    branches: [main, master]

jobs:
  lint-and-format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - run: npm ci
      - run: npm run format:check
      - run: npm run lint

  test-client:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - working-directory: ./client
        run: |
          npm ci
          npm test -- --watchAll=false

  test-server:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
          POSTGRES_DB: postgres_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'
      - working-directory: ./server
        run: |
          npm ci
          npm run test:unit
          npm run test:integration
          npm run test:mutation

  e2e-tests:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:14
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 123
          POSTGRES_DB: postgres_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: |
          npm ci
          cd client && npm ci
          cd ../server && npm ci
          cd ../e2e && npm ci
          npm install -g wait-on

      - name: Install missing Babel dependency
        working-directory: ./client
        run: npm install --save-dev @babel/plugin-proposal-private-property-in-object

      - name: Start server
        env:
          NODE_ENV: test
          JWT_SECRET: test-secret
          PORT: 5000
          DB_TYPE: postgres
          DB_HOST: localhost
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: 123
          DB_DATABASE: postgres_test
        run: |
          cd server
          node server.js &
          sleep 15
          curl -v http://localhost:5000/api/health || exit 1

      - name: Start client
        env:
          CI: 'true'
          PORT: 3000
          SKIP_PREFLIGHT_CHECK: 'true'
          WATCHPACK_POLLING: 'true'
        run: |
          cd client
          npm start &
          sleep 40

      - name: Run e2e tests
        env:
          CYPRESS_BASE_URL: http://localhost:3000
        working-directory: ./e2e
        run: npx cypress run
